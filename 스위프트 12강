//TableViewController//

import UIKit

var items = ["책 구매", "철수와 약속", "스터디 준비하기"] //외부변수인 items의 내용을 각각 지정//
var itemsImageFile = ["cart.jpeg", "clock.jpeg", "pencil.jpeg"] //외부변수인 이미지파일을 설정//

class TableViewController: UITableViewController {

    @IBOutlet var tvListView: UITableView!
    override func viewDidLoad() {
        super.viewDidLoad()

        self.navigationItem.leftBarButtonItem = self.editButtonItem
    }
    //뷰가 노출될 때마다 리스트의 데이터를 다시 불러온다//
    override func viewWillAppear(_ animated: Bool) {
        tvListView.reloadData()
    }

    override func numberOfSections(in tableView: UITableView) -> Int {
        return 1 //보통 테이블 안에 섹션이 하나이므로 리턴값을 1로 한다//
    }

    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return items.count //섹션당 열의 개수는 items의 개수//
    }

    //items와 itemsImageFile의 값을 셀에 삽입//
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "myCell", for: indexPath)
        
        cell.textLabel?.text = items[(indexPath as NSIndexPath).row] //셀의 텍스트 레이블 앞에서 선언한 items을 대입//
        cell.imageView?.image = UIImage(named: itemsImageFile[(indexPath as NSIndexPath).row]) //셀의 이미지 뷰에 앞에서 선언한 파일을 대입//
        
        return cell
    }


    /*
    // Override to support conditional editing of the table view.
    override func tableView(_ tableView: UITableView, canEditRowAt indexPath: IndexPath) -> Bool {
        // Return false if you do not want the specified item to be editable.
        return true
    }
    */
    
    //목록삭제함수//
    override func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCell.EditingStyle, forRowAt indexPath: IndexPath) {
        if editingStyle == .delete {
            items.remove(at: (indexPath as NSIndexPath).row)
            itemsImageFile.remove(at: (indexPath as NSIndexPath).row)
            tableView.deleteRows(at: [indexPath], with: .fade)
        } else if editingStyle == .insert {
        
        }    
    }
    //삭제시 delete대신 삭제로 표시하기//
    override func tableView(_ tableView: UITableView, titleForDeleteConfirmationButtonForRowAt indexPath: IndexPath) -> String? {
        return "삭제"
    }

    //목록의 순서 변경//
    override func tableView(_ tableView: UITableView, moveRowAt fromIndexPath: IndexPath, to: IndexPath) {
        let itemToMove = items[(fromIndexPath as NSIndexPath).row] //이동할 아이템의 위치를 itemToMove에 저장//
        let itemImageToMove = itemsImageFile[(fromIndexPath as NSIndexPath).row] //이동할 아이템의 이미지를 itemImageMove에 저장// 
        items.remove(at: (fromIndexPath as NSIndexPath).row) //이동할 아이템을 삭제 아이템들의 인덱스가 재정렬됨//
        itemsImageFile.remove(at: (fromIndexPath as NSIndexPath).row) //이동할 아이템의 이미지를 삭제 이미지들의 인덱스 재정렬됨//
        items.insert(itemToMove, at: (to as NSIndexPath).row) //삭제한 아이템을 이동할 위치로 삽입//
        itemsImageFile.insert(itemImageToMove, at: (to as NSIndexPath).row) //삭제된 아이템의 이미지르 이동할 위치로 삽입//

    }


    /*
    // Override to support conditional rearranging of the table view.
    override func tableView(_ tableView: UITableView, canMoveRowAt indexPath: IndexPath) -> Bool {
        // Return false if you do not want the item to be re-orderable.
        return true
    }
    */

    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if segue.identifier == "sgDetail" {
            let cell = sender as! UITableViewCell
            let indexPath = self.tvListView.indexPath(for: cell)
            let detailView = segue.destination as! DetailViewController
            detailView.receiveItem(items[((indexPath! as NSIndexPath).row)])
        }
    }
    

}

//AddViewController//

import UIKit

class AddViewController: UIViewController {

    @IBOutlet var tfAddItem: UITextField!
    override func viewDidLoad() {
        super.viewDidLoad()
        
    }
    //새목록 추가//
    @IBAction func btnAddItem(_ sender: UIButton) {
        items.append(tfAddItem.text!) //items에 텍스트 필드의 텍스트값을 추가//
        itemsImageFile.append("clock.jpeg") 
        tfAddItem.text = "" //텍스트 필드의 내용을 지운다//
        _ = navigationController?.popViewController(animated: true) //루트 뷰 컨트롤러 테이블뷰로 돌아간다//
    }
    
    /*
    // MARK: - Navigation

    // In a storyboard-based application, you will often want to do a little preparation before navigation
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        // Get the new view controller using segue.destination.
        // Pass the selected object to the new view controller.
    }
    */

}

//DatailViewController//

import UIKit

class DetailViewController: UIViewController {
    
    var receiveItem = "" //변수 선언//

    @IBOutlet var lblItem: UILabel! //뷰가 노출될 때마다 이 내용을 레이블의 텍스트로 표시//
    override func viewDidLoad() {
        super.viewDidLoad()

        // Do any additional setup after loading the view.
        lblItem.text = receiveItem
    }
    
    func receiveItem(_ item: String) //MainView에서 변수를 받기 위한 함수를 추가//
    {
        receiveItem = item
    }
    

    /*
    // MARK: - Navigation

    // In a storyboard-based application, you will often want to do a little preparation before navigation
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        // Get the new view controller using segue.destination.
        // Pass the selected object to the new view controller.
    }
    */

}
