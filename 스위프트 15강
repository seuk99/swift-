
import UIKit
import MobileCoreServices //다양한 타입들을 정의해 놓은 헤더파일 추가//

class ViewController: UIViewController, UINavigationControllerDelegate,
                      UIImagePickerControllerDelegate { //델리게이트 프로토콜 추가//

    @IBOutlet var imgView: UIImageView!
    
    //UIImagePickerController 인스턴스 변수 생성//
    let imagepicker: UIImagePickerController! = UIImagePickerController()
    var captureImage: UIImage! //사진을 저장할 변수//
    var videoURL: URL! //녹화한 비디오의 URL을 저장할 변수//
    var flagImageSave = false //사진 저장 여부를 나타낼 변수//
    
    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view.
    }
    //사진 촬영하기//
    
    @IBAction func btnCaptureImageFromCamera(_ sender: UIButton) {
    //카메라사용 가능 하다면//
        if (UIImagePickerController.isSourceTypeAvailable(.camera)){
            flagImageSave = true //사진 저장 플래그를 true로 설정//
            
            imagepicker.delegate = self //이미지 파커의 델리게이트를 self로 설정//
            imagepicker.sourceType = .camera //이미지 파커의 소스타입을 Camera로 설정//
            imagepicker.mediaTypes = ["public.movie"] //미디어 타입을 kUTTypeImage로 설정//
            imagepicker.allowsEditing = false //편집을 허용하지 않음//
            
            present(imagepicker, animated: true, completion: nil) //뷰 컨트롤러를 ImagePicker로 대체//
        }
        else { //카메라를 사용할 수 없을 때 경고 창 출력//
            myAlert("Camera inaccessable", message: "Application cannot access the camera.")
        }
    }
    //사진 불러오기//
    @IBAction func btnLoadImageFromLibrary(_ sender: UIButton) {
        if (UIImagePickerController.isSourceTypeAvailable(.photoLibrary)){
            flagImageSave = false
            
            imagepicker.delegate = self 
            imagepicker.sourceType = .photoLibrary //이미지 파커의 소스타입을 PhotoLibrary로 설정//
            imagepicker.mediaTypes = ["public.image"]
            imagepicker.allowsEditing = true //편집을 허용//
            
            present(imagepicker, animated: true, completion: nil)
        }
        else {
            myAlert("photo album inacceeable", message: "Applicatin cannot access the photo album.")
        }
    }
    //비디오 촬영하기//
    @IBAction func btnRecordVidieoFromCamera(_ sender: UIButton) {
        if (UIImagePickerController.isSourceTypeAvailable(.camera)){
            flagImageSave = true
            
            imagepicker.delegate = self
            imagepicker.sourceType = .camera //미디어 타입을 kUTTypeImage로 설정//
            imagepicker.mediaTypes = ["public.movie"]
            imagepicker.allowsEditing = false
            
            present(imagepicker, animated: true, completion:  nil)
        }
        else {
            myAlert("Camera inaccessable", message: "Application cannot access the camera")
        }
    }
    //비디오 불러오기//
    @IBAction func btnLoadVideoFromLibrary(_ sender: UIButton) {
        if (UIImagePickerController.isSourceTypeAvailable(.photoLibrary)){
            flagImageSave = false
            
            imagepicker.delegate = self
            imagepicker.sourceType = .photoLibrary
            imagepicker.mediaTypes = ["public.movie"]
            imagepicker.allowsEditing = false
            
            present(imagepicker, animated: true, completion: nil)
        }
        else {
            myAlert("photo album inacceeable", message: "Applicatin cannot access the photo album.")
        }
    }
    
    //사진, 비디오 촬영이나 선택이 끝났을 떄 호출되는 델리게이트 메서드//
    func imagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [UIImagePickerController.InfoKey : Any]) {
       //미디어 종류 확인//
        let mediaType = info[UIImagePickerController.InfoKey.mediaType]
        as! NSString
        //미디어가 사진이면//
        if mediaType.isEqual(to: "public.image" as String) {
            captureImage = info[UIImagePickerController.InfoKey.originalImage]
            as? UIImage
            //사진을 가져옴//
            if flagImageSave { //flagImageSave가 true일 때 사진을 포토 라이브러리에 저장//
                UIImageWriteToSavedPhotosAlbum(captureImage, self, nil, nil)
            }
            imgView.image = captureImage //가져온 사진을 이미지 뷰에 출력
        }
            else if mediaType.isEqual(to: "public.movie" as String) { //미디어가 비디오 일때//
                if flagImageSave { //flagImageSave가 true일때 비디오를 가져옴//
                    videoURL = (info[UIImagePickerController.InfoKey.mediaURL]
                                as! URL) 
                                
                    //비디오를 포토 라이브러리에 저장//
                    UISaveVideoAtPathToSavedPhotosAlbum(videoURL.relativePath, self, nil, nil)
                }
            }
            //현재의 뷰(이미지 피커)제거//
            self.dismiss(animated: true, completion: nil)
    }
    //사진,비디오 촬영이나 선택을 취소했을 때 호출되는 델리게이트 메서드//
        func imagePickerControllerDidCancel(_ picker: UIImagePickerController){
        //현재의 뷰(이미지 피커) 제거
            self.dismiss(animated: true, completion: nil)
        }
        //경고창 출력 함수//
    
    func myAlert(_ title: String, message: String) {
        let alert = UIAlertController(title: title, message: message, preferredStyle: UIAlertController.Style.alert)
        let action = UIAlertAction(title: "ok", style: UIAlertAction.Style.default, handler: nil)
        alert.addAction(action)
        self.present(alert, animated: true, completion: nil)
    }
}

